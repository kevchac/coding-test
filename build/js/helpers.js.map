{"version":3,"sources":["helpers.js"],"names":["calculateNextPrev","index","x","tabHeader","length","setTabContainerVisible","activeTabHeader","document","querySelector","setAttribute","classList","remove","add","listIndicator","sectionContainer"],"mappings":"AACA,MAAMA,kBAAoB,CAACC,EAAOC,IAC1BD,GAASE,UAAUC,OAAO,GAAKF,EACjB,EACTD,GAAO,IAAKC,EACVC,UAAUC,OAAQ,EAEtBF,EAAID,EAAO,EAAIA,EAAO,EAK3BI,uBAAyBJ,IAE3B,MAAMK,EAAiBC,SAASC,cAAc,uBAC9CF,EAAgBG,aAAa,gBAAiB,SAC9CH,EAAgBI,UAAUC,OAAO,sBACjCJ,SAASC,cAAc,sBAAsBE,UAAUC,OAAO,qBAG9DR,UAAUF,GAAOS,UAAUE,IAAI,sBAC/BT,UAAUF,GAAOQ,aAAa,gBAAiB,QAC/CI,cAAcZ,GAAOS,UAAUE,IAAI,qBACnCL,SAASC,cAAc,sBAAsBE,UAAUC,OAAO,qBAC9DG,iBAAiBb,GAAOS,UAAUE,IAAI","file":"helpers.js","sourcesContent":["// Identify the next or prev tab, it depends of the index and the list length\r\nconst calculateNextPrev = (index, x)=>{\r\n    if (index >= tabHeader.length-1 && x) {\r\n       return index = 0;\r\n    }else if(index<=0 &&!x){\r\n        return tabHeader.length -1;\r\n    }\r\n    return x ? index +1 : index -1;\r\n\r\n}\r\n\r\n// Define the status of the tabs and the containers\r\nconst setTabContainerVisible =(index)=>{\r\n    //Get active elements and delete active class\r\n    const activeTabHeader= document.querySelector('.list__link--active');\r\n    activeTabHeader.setAttribute('aria-selected', 'false');\r\n    activeTabHeader.classList.remove('list__link--active')\r\n    document.querySelector('.list__bar--active').classList.remove('list__bar--active');\r\n\r\n    //Add new active elements\r\n    tabHeader[index].classList.add('list__link--active');\r\n    tabHeader[index].setAttribute('aria-selected', 'true');\r\n    listIndicator[index].classList.add('list__bar--active');\r\n    document.querySelector('.container--active').classList.remove('container--active');\r\n    sectionContainer[index].classList.add('container--active');\r\n    \r\n};\r\n"]}